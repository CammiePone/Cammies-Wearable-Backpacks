plugins {
    id 'org.quiltmc.loom' version '1.3.+'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

// messy workaround for bug in quilt loom 1.3.3
project.configurations.configureEach {
    exclude(group: "net.fabricmc", module: "fabric-loader")
    exclude(group: "net.fabricmc.fabric-api")
}

repositories {
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url 'https://maven.terraformersmc.com/' }

    // Universal Graves dependencies go brrrrrrr
    maven { url 'https://maven.nucleoid.xyz' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "org.quiltmc:quilt-mappings:${project.quilt_mappings}:intermediary-v2"

    modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.qfapi_version}"
    modImplementation "maven.modrinth:universal-graves:${project.graves_version}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"

    // This is all for Universal Graves :despair:
    modImplementation "eu.pb4:sgui:1.2.2+1.20"
    modImplementation "eu.pb4:placeholder-api:2.1.3+1.20.1"
    modImplementation 'eu.pb4:polymer-core:0.5.15+1.20.1'
    modImplementation 'eu.pb4:polymer-resource-pack:0.5.15+1.20.1'
    modImplementation 'eu.pb4:polymer-virtual-entity:0.5.15+1.20.1'
    modImplementation 'eu.pb4:predicate-api:0.2.1+1.20.1'
    modImplementation "eu.pb4:common-protection-api:1.0.0"
    modImplementation 'xyz.nucleoid:server-translations-api:2.0.0+1.20'
    modImplementation "me.lucko:fabric-permissions-api:0.2-SNAPSHOT"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("quilt.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}